# Local files
darksky_test_info.json

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
/lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Sphinx documentation
docs/_build/

# PyBuilder
target/


# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

HELP.md
target/
!.mvn/wrapper/maven-wrapper.jar
!**/src/main/**
!**/src/test/**

### STS ###
.apt_generated
.classpath
.factorypath
.project
.settings
.springBeans
.sts4-cache


### NetBeans ###
/rest-service/nbproject/private/
/rest-service/nbbuild/
/rest-service/dist/
/rest-service/nbdist/
/rest-service/.nb-gradle/
build/



# The directory Mix will write compiled artifacts to.
elixir_server/_build/

# If you run "mix test --cover", coverage assets end up here.
elixir_server/cover/

# The directory Mix downloads your dependencies sources to.
elixir_server/deps/

# Where 3rd-party dependencies like ExDoc output generated docs.
elixir_server/doc/

# Ignore .fetch files in case you like to edit your project deps locally.
elixir_server/.fetch

# If the VM crashes, it generates a dump, let's ignore it too.
erl_crash.dump

# Also ignore archive artifacts (built via "mix archive.build").
*.ez

# Ignore package tarball (built via "mix hex.build").
elixir_server-*.tar

# If NPM crashes, it generates a log, let's ignore it too.
npm-debug.log

# The directory NPM downloads your dependencies sources to.
elixir_server/assets/node_modules/

# Since we are building assets from assets/,
# we ignore priv/static. You may want to comment
# this depending on your deployment strategy.
elixir_server/priv/static/


# Flutter/Dart/Pub related
**/doc/api/
**/ios/Flutter/.last_build_id
/flutter_app/.dart_tool/
/flutter_app/.flutter-plugins
/flutter_app/.flutter-plugins-dependencies
/flutter_app/.packages
/flutter_app/.pub-cache/
/flutter_app/.pub/
/flutter_app/build/

# Web related
/flutter_app/lib/generated_plugin_registrant.dart

# Symbolication related
/flutter_app/app.*.symbols

# Obfuscation related
/flutter_app/app.*.map.json

# Android Studio will place build artifacts here
/flutter_app/android/app/debug
/flutter_app/android/app/profile
/flutter_app/android/app/release
